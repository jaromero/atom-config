# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
'.source.scss':
  'HDPI media query':
    'prefix': 'hdpi'
    'body': """
      @media screen and (-webkit-min-device-pixel-ratio: 1.5),
                			  (min--moz-device-pixel-ratio: 1.5),
                			  (min-resolution: 1.5dppx),
                			  (min-resolution: 144dpi) {
        $1
      }"""

'.text.html.angular':
  'ngMessages':
    'prefix': 'ngmsg'
    'body': """
    <div ng-messages="$1.$error">
      <div ng-message="$2">$3</div>
    </div>"""

'.text.vue':
  'component':
    'prefix': 'comp'
    'body': """
      <template>
      </template>

      <script>
      export default {
        name: '$1',
        props: [$2],
        data() {$3},
        computed: {$4},
        methods: {$5},
      }
      </script>

      <style>
      </style>
    """

'.source.jsx':
  'component':
    'prefix': 'comp'
    'body': """
      import React, {Component} from 'react';

      export default class ${1:Comp} extends Component {
        render() {
          return (
            ${2:<div>Comp</div>}
          );
        }
      }

    """
  'functional-component':
    'prefix': 'comp-func'
    'body': """
      import React from 'react';

      export default function ${1:Func}(props) {
        return (
          ${2:<div>Func</div>}
        );
      }

    """
